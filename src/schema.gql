# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Especialidad {
  id: String!
  nombre: String!
}

type Proyecto {
  id: String!
  nombre: String!
  descripcion: String!
  developers: [Developer!]
  roles: [Especialidad!]!
  status: Status!
}

enum Status {
  ACTIVO
  INACTIVO
}

type Developer {
  id: String!
  nombre: String!
  email: String!
  proyectos: [Proyecto!]
  roles: [Especialidad!]!
}

type Query {
  getEspecialidades: [Especialidad!]!
  getEspecialidad(id: String!): Especialidad
  getDeveloper(id: String!): Developer
  getDevelopers: [Developer!]
  getDevelopersPorRolYProyecto(rol: EspecialidadDto!, idProyecto: String!): [Developer!]!
  getProyectos: [Proyecto!]
  getProyecto(id: Int!): Proyecto!
  getProyectosPorRolesYStatus(roles: [EspecialidadDto!]!, status: Int!): [Proyecto!]!
}

input EspecialidadDto {
  id: String!
  nombre: String!
}

type Mutation {
  setEspecialidad(nombre: String!): Especialidad!
  eliminarEspecialidad(id: String!): Especialidad
  setDeveloper(nombre: String!, email: String!, proyectos: [ProyectoDto!], roles: [EspecialidadDto!]!): Developer
  eliminarDeveloper(id: String!): Developer
  setProyectos(nombre: String!, descripcion: String!, status: Int!, developers: [DeveloperDto!], roles: [EspecialidadDto!]!): Proyecto!
  asignarDevHaProyecto(idProyecto: String!, developers: [DeveloperDto!]!): [Developer!]!
}

input ProyectoDto {
  id: String!
  nombre: String!
  descripcion: String!
  roles: [EspecialidadDto!]!
  status: Status!
}

input DeveloperDto {
  id: String!
  nombre: String!
  email: String!
  roles: [EspecialidadDto!]!
}